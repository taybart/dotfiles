### Options
set -g status-interval 1
set-option -s escape-time 10
set-option -g mouse on
set-option -g history-limit 5000
set-option -g focus-events on

set -g default-terminal "xterm-kitty"

# loud or quiet?
set-option -g visual-activity off
set-option -g visual-bell off
set-option -g visual-silence off
set-window-option -g monitor-activity off
set-option -g bell-action none

set-window-option -g xterm-keys on

# Don't exit copy mode when mouse drags
unbind -T copy-mode-vi MouseDragEnd1Pane
bind-key -T copy-mode-vi Escape send-keys -X cancel

# macos fix
# if-shell "uname | grep -q Darwin" "set-option -g default-command \"reattach-to-user-namespace -l zsh\"" "set -g default-terminal \"screen-256color\""

### Status bar
set-option -g status-position top
set -g status-keys vi
set -g status-bg colour236
set -g status-fg white

set -g status-left-length 15
set -g status-right-length 55
set -g status-left "#[fg=white,bright,bg=colour20] #(hostname) #[fg=colour20,bg=default]#[default]"
set -g status-right "#[default]#[fg=colour20,bg=default]#[fg=white,bright,bg=colour20] %Y-%m-%d #(TZ=America/Denver date +%%H:%%M:%%S) #[fg=colour196][#(TZ="Etc/UTC" date +%%H)]#[default]"

# Window Status
setw -g window-status-format " #[fg=colour243]#W "
setw -g window-status-current-format " #[fg=colour236,bg=colour20]#[fg=white,bright] #W #[fg=colour20,bg=default] "

# Pane titles
unbind t
bind t setw pane-border-status
set -g pane-border-format "#{pane_title}"
# Rename pane
unbind T
bind T command-prompt -p "(rename-pane)" -I "#T" "select-pane -T '%%'"


# Smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"


## Key bindings

# prefix binding
unbind C-b
set -g prefix C-f
bind-key C-f send-prefix

# light status
bind b set -g status-bg colour255\; setw -g window-status-current-format " #[fg=colour255,bg=colour20]#[fg=white,bright] #W #[fg=colour20,bg=default] "

# Change window title
unbind R
bind R command-prompt "rename-window %%"

# Window Splitting
unbind %
bind | split-window -h -f -c '#{pane_current_path}'
bind \\ split-window -h -c '#{pane_current_path}'
bind _ split-window -v -f -c '#{pane_current_path}'
bind - split-window -v -c '#{pane_current_path}'

# Resizing
bind-key J resize-pane -D 5
bind-key K resize-pane -U 5
bind-key L resize-pane -R 5
bind-key H resize-pane -L 5
bind-key j resize-pane -D 15
bind-key k resize-pane -U 15
bind-key l resize-pane -R 15
bind-key h resize-pane -L 15

# Swap pane
bind-key -n M-h swap-window -t -1\; select-window -t -1
bind-key -n M-l swap-window -t +1\; select-window -t +1

# Reload source
unbind r
bind r source-file ~/.tmux.conf \; display-message "Config reloaded..."

# popup for note taking
bind-key i display-popup -E 'nvim ~/.notes/notes'
# git TODO: actually use this
bind-key g display-popup -E -d '#{pane_current_path}' 'git status && zsh'
# rest
bind-key e display-popup -E -d '#{pane_current_path}' '~/.dotfiles/shell/restsb'

# local changes?
if-shell '[[ -f ~/.tmux.conf.local ]]' 'source-file ~/.tmux.conf.local'
